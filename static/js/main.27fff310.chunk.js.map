{"version":3,"sources":["js/typeColors.js","serviceWorker.js","api.js","store/index.js","js/userOutsideClick.js","App.js","index.js","style.module.scss"],"names":["module","exports","grass","poison","fire","flying","bug","normal","water","Boolean","window","location","hostname","match","fetchList","offset","limit","a","console","log","Promise","resolve","reject","fetch","then","res","json","catch","err","list","nestedData","all","results","map","el","url","push","items","count","Store","pokemons","status","itemsCount","elementPerList","currentPage","itemForModal","tempArr","selectedFilters","allFiltres","pushPokemons","item","getList","data","arr","types","type","name","uniqueArr","filter","index","indexOf","selectArr","value","label","runInAction","this","payload","page","e","target","parseInt","setStatus","setPage","selected","length","filteredArr","slice","filtres","newArr","pokemon","decorate","observable","updatePagination","action","computed","changingPage","pageCount","useOutsideClick","ref","callback","handleClick","current","contains","useEffect","document","addEventListener","removeEventListener","App","observer","store","useRef","userOutsideClick","Object","keys","callModal","animatedComponents","makeAnimated","className","styles","box","nagivation","tagFilter","onChange","filterByTag","closeMenuOnSelect","components","defaultValue","isMulti","options","nameSearch","filterByName","placeholder","pagination","previousLabel","nextLabel","breakLabel","breakClassName","onPageChange","marginPagesDisplayed","pageRangeDisplayed","initialPage","containerClassName","subContainerClassName","activeClassName","active","loader","mainArea","style","card","key","Date","now","onClick","src","sprites","front_default","alt","stats","stat","base_stat","tags","tag","backgroundColor","typeColors","modal","leftPart","weight","rightPart","close","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"4EAAAA,EAAOC,QAAS,CACZC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,IAAK,UACLC,OAAS,UACTC,MAAO,Y,+GCKSC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2DClBOC,EAAS,uCAAG,WAAMC,EAAOC,GAAb,SAAAC,EAAA,6DAErBC,QAAQC,IAAI,gBAAgBJ,EAAOC,GAFd,kBAGd,IAAII,QAAJ,uCAAY,WAAMC,EAAQC,GAAd,iBAAAL,EAAA,sEACEM,MAAM,6CAAD,OAA8CR,EAA9C,kBAA8DC,IACnFQ,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdC,OAAM,SAAAC,GAAG,OAAEN,EAAOM,MAHJ,OACXC,EADW,OAIXC,EAAa,GACjBV,QAAQW,IAAIF,EAAKG,QAAQC,IAAb,uCAAiB,WAAMC,GAAN,SAAAjB,EAAA,sEACnBM,MAAMW,EAAGC,KACdX,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACFK,EAAWM,KAAKX,MAJK,2CAAjB,wDAMRD,MAAK,WACLH,EAAQ,CAACgB,MAAOP,EAAWQ,MAAOT,EAAKS,WAZ5B,2CAAZ,0DAHc,2CAAH,wDCGhBC,E,4DACFC,SAAW,G,KACXC,OAAS,U,KACTC,WAAa,E,KACbC,eAAiB,G,KACjBC,YAAc,E,KACdC,aAAe,G,KACfC,QAAU,G,KACVC,gBAAkB,G,KAClBC,WAAa,G,KAEbC,aAAe,SAACC,GACZ,EAAKV,SAASJ,KAAKc,I,KAMvBC,Q,uCAAU,WAAOpC,EAAOC,GAAd,SAAAC,EAAA,sEACAH,EAAUC,EAAOC,GACtBQ,MAAK,SAAA4B,GACFlC,QAAQC,IAAI,QAAQiC,GAEpB,IAAIC,EAAM,GACVD,EAAKf,MAAMJ,KAAI,SAAAC,GACXA,EAAGoB,MAAMrB,KAAI,SAAAiB,GACTG,EAAIjB,KAAKc,EAAKK,KAAKC,YAG3B,IAAIC,EAAYJ,EAAIK,QAAO,SAACR,EAAKS,GAAS,OAAON,EAAIO,QAAQV,IAASS,KAElEE,EAAW,GACfJ,EAAUxB,KAAI,SAAAC,GAAM2B,EAAUzB,KAAK,CAAC0B,MAAM5B,EAAG6B,MAAM7B,OAEnD8B,aAAY,WACR,EAAKxB,SAAWY,EAAKf,MACrB,EAAKI,OAAS,UACd,EAAKC,WAAaU,EAAKd,MACvB,EAAKU,WAAaa,QAEvBlC,OAAM,SAAAC,GACLV,QAAQC,IAAIS,GACZoC,aAAY,WACR,EAAKvB,OAAS,cAzBhB,2C,8GAHAA,GACNwB,KAAKxB,OAASA,I,oCAgCJyB,GACVhD,QAAQC,WAAW+C,K,8BAGfC,GACJF,KAAKrB,YAAcuB,I,uCAENC,GACblD,QAAQC,IAAIiD,EAAEC,OAAOP,OACrBG,KAAKtB,eAAiB2B,SAASF,EAAEC,OAAOP,OACxCG,KAAKM,UAAU,WACfN,KAAKd,QAAQc,KAAKlD,OAAOkD,KAAKtB,kB,mCASrBwB,GACTF,KAAKO,QAAQL,EAAKM,UAClBR,KAAKd,QAAQc,KAAKlD,OAAOkD,KAAKtB,gBAC9BsB,KAAKM,UAAU,a,gCAETrC,GACNhB,QAAQC,IAAIe,EAAGsB,MACfS,KAAKpB,aAAeX,I,mCAGXkC,GAENH,KAAKnB,QAAQ4B,SACZT,KAAKzB,SAAWyB,KAAKnB,SAEzB,IACI6B,EADMV,KAAKzB,SAASoC,QACFlB,QAAO,SAAAxB,GAAE,OAAGA,EAAGsB,MAAQY,EAAEC,OAAOP,UAElDa,EAAYD,QAAUN,EAAEC,OAAOP,MAAMY,SACrCT,KAAKnB,QAAUmB,KAAKzB,UAErBmC,EAAYD,QACXT,KAAKnB,QAAUmB,KAAKzB,SACpByB,KAAKzB,SAAWmC,GACc,GAAzBP,EAAEC,OAAOP,MAAMY,SACpBxD,QAAQC,IAAI,OACZD,QAAQC,IAAI,QAAQ8C,KAAKnB,SACzB5B,QAAQC,IAAI,OAAO8C,KAAKzB,UACxByB,KAAKzB,SAAWyB,KAAKnB,W,kCAIjBsB,GACR,IAAIS,EAAU,GAId,GAHGZ,KAAKnB,QAAQ4B,SACZT,KAAKzB,SAAWyB,KAAKnB,SAEjB,MAALsB,GAAeA,EAAEM,OAGf,CACDN,EAAEnC,KAAI,SAAAC,GAAE,OAAE2C,EAAQzC,KAAKF,EAAG4B,UAC1B,IAAIgB,EAAS,GACbb,KAAKzB,SAASP,KAAI,SAAA8C,GACdA,EAAQzB,MAAMrB,KAAI,SAAAC,GACX2C,EAAQjB,QAAQ1B,EAAGqB,KAAKC,OAAS,GAChCsB,EAAO1C,KAAK2C,SAIxBd,KAAKnB,QAAUmB,KAAKzB,SACpByB,KAAKzB,SAAWsC,OAbhBD,EAAUZ,KAAKjB,WACfiB,KAAKzB,SAAWyB,KAAKnB,U,6BA7CzB,OAAQmB,KAAKrB,YAAcqB,KAAKtB,iB,gCAGhC,OAAOsB,KAAKvB,WAAauB,KAAKtB,mB,KA6DtCqC,YAASzC,EAAM,CACXC,SAAUyC,IACVxC,OAAQwC,IACRvC,WAAYuC,IACZtC,eAAgBsC,IAChBC,iBAAkBC,IAClBpE,OAAQqE,IACRC,aAAcF,IACdvC,YAAaqC,IACbV,UAAWY,IACXG,UAAWF,IACXvC,aAAcoC,IACdnC,QAASmC,IACTjC,WAAYiC,IACZlC,gBAAiBkC,MAGN,UAAI1C,E,iCChIJgD,EAhBS,SAACC,EAAKC,GAC5B,IAAMC,EAAc,SAAAtB,GACdoB,EAAIG,UAAYH,EAAIG,QAAQC,SAASxB,EAAEC,SACzCoB,KAIJI,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASL,GAE5B,WACLI,SAASE,oBAAoB,QAASN,Q,iCCkG7BO,EAlGHC,aAAS,WAAO,IACjBzD,EAAwG0D,EAAxG1D,OAAQG,EAAgGuD,EAAhGvD,YAAa0C,EAAmFa,EAAnFb,UAAW3C,EAAwEwD,EAAxExD,eAAgBH,EAAwD2D,EAAxD3D,SAAUK,EAA8CsD,EAA9CtD,aAAcG,EAAgCmD,EAAhCnD,WAAgCmD,EAAnBpD,gBAC5F8C,qBAAU,WACNM,EAAMhD,QAAQP,EAAYD,KAC5B,IAEF,IAAM6C,EAAMY,mBAEZC,EAAiBb,GAAK,WACfc,OAAOC,KAAK1D,GAAc6B,QACzByB,EAAMK,UAAU,OAGxB,IAAMC,EAAqBC,cAE3B,OACI,yBAAKC,UAAWC,IAAOC,KACnB,yBAAKF,UAAWC,IAAOE,YACnB,kBAAC,IAAD,CACIH,UAAWC,IAAOG,UAClBC,SAAU,SAAA5C,GAAC,OAAE+B,EAAMc,YAAY7C,IAC/B8C,mBAAmB,EACnBC,WAAYV,EACZW,aAAcpE,EACdqE,SAAO,EACPC,QAAStE,IAEb,2BACI2D,UAAWC,IAAOW,WAClBP,SAAU,SAAA5C,GAAC,OAAE+B,EAAMqB,aAAapD,IAChCqD,YAAY,qBAEhB,yBAAKd,UAAWC,IAAOc,YACnB,+CACA,4BAAQ5D,MAAOnB,EAAgBqE,SAAU,SAAC5C,GAAD,OAAK+B,EAAMjB,iBAAiBd,KACjE,4BAAQN,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGR,kBAAC,IAAD,CACI6D,cAAe,WACfC,UAAW,OACXtC,UAAWA,EACXuC,WAAY,MACZC,eAAgB,WAChBC,aAAc,SAAA3D,GAAC,OAAE+B,EAAMd,aAAajB,IACpC4D,qBAAsB,EACtBC,mBAAoB,EACpBC,YAAetF,EACfuF,mBAAoB,iBACpBC,sBAAuB,mBACvBC,gBAAiBzB,IAAO0B,UAGhC,wBAAI3B,UAAWC,IAAO2B,QAAmB,WAAV9F,EAAsB,qBAAuB,MAE5E,yBAAKkE,UAAWC,IAAO4B,SAAUC,MAAO,CAAC/E,OAAmB,YAAXjB,EAAwB,aAAe,OAEvFD,EAASP,KAAI,SAAAC,GAAE,OACZ,yBAAKyE,UAAWC,IAAO8B,KAAMC,IAAKzG,EAAGsB,KAAKoF,KAAKC,MAAOC,QAAS,SAAA1E,GAAC,OAAE+B,EAAMK,UAAUtE,KAC9E,6BAAMA,EAAGsB,MACT,yBAAKuF,IAAK7G,EAAG8G,QAAQC,cAAeC,IAAKhH,EAAGsB,OAC5C,sCACA,2BAAItB,EAAGiH,MAAM,GAAGC,KAAK5F,KAArB,KAA6BtB,EAAGiH,MAAM,GAAGE,WACzC,2BAAInH,EAAGiH,MAAM,GAAGC,KAAK5F,KAArB,KAA6BtB,EAAGiH,MAAM,GAAGE,WACzC,2BAAInH,EAAGiH,MAAM,GAAGC,KAAK5F,KAArB,KAA6BtB,EAAGiH,MAAM,GAAGE,WACzC,yBAAK1C,UAAWC,IAAO0C,MACnB,sCACCpH,EAAGoB,MAAMrB,KAAI,SAAAC,GAAE,OACZ,yBAAKyE,UAAWC,IAAO2C,IAAKd,MAAO,CAACe,gBAAiBC,IAAWvH,EAAGqB,KAAKC,OAAQmF,IAAKzG,EAAGqB,KAAKC,MAAOtB,EAAGqB,KAAKC,eAQ3H8C,OAAOC,KAAK1D,GAAc6B,OACvB,yBAAKiC,UAAWC,IAAO8C,MAAOlE,IAAKA,GAC/B,yBAAKmB,UAAWC,IAAO+C,UACnB,yBAAKZ,IAAKlG,EAAamG,QAAQC,cAAeC,IAAKrG,EAAaW,OAChE,4BAAKX,EAAaW,MAClB,sCAAYX,EAAa+G,SAE7B,yBAAKjD,UAAWC,IAAOiD,WACnB,sCACChH,EAAasG,MAAMlH,KAAI,SAAAC,GAAE,OACtB,uBAAGyG,IAAKzG,EAAGmH,UAAUnH,EAAGkH,KAAK5F,MAAOtB,EAAGkH,KAAK5F,KAA5C,KAAoDtB,EAAGmH,eAG/D,uBAAG1C,UAAWC,IAAOkD,MAAOhB,QAAS,SAAA1E,GAAC,OAAE+B,EAAMK,UAAU,MAAxD,UAEN,SCrGduD,IAASC,OAAO,kBAAC,EAAD,MAAOlE,SAASmE,eAAe,SL8HzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5I,MAAK,SAAA6I,GACJA,EAAaC,gBAEd3I,OAAM,SAAA4I,GACLrJ,QAAQqJ,MAAMA,EAAMC,a,kBMxI5BxK,EAAOC,QAAU,CAAC,IAAM,mBAAmB,WAAa,0BAA0B,UAAY,yBAAyB,WAAa,0BAA0B,OAAS,sBAAsB,WAAa,0BAA0B,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,sBAAsB,SAAW,wBAAwB,KAAO,oBAAoB,KAAO,oBAAoB,IAAM,sB","file":"static/js/main.27fff310.chunk.js","sourcesContent":["module.exports ={\r\n    grass: \"#94ffc9\",\r\n    poison: \"#ff2189\",\r\n    fire: \"#ff8629\",\r\n    flying: \"#b0ffff\",\r\n    bug: \"#994700\",\r\n    normal : \"#3bff29\",\r\n    water: \"#413bff\"\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const fetchList = async(offset,limit)=>{\r\n\r\n    console.log('offset,limit:',offset,limit)\r\n    return new Promise(async(resolve,reject)=>{\r\n        let list = await fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\r\n        .then(res=>res.json())\r\n        .catch(err=>reject(err))\r\n        let nestedData = []\r\n        Promise.all(list.results.map(async(el)=>{\r\n            await fetch(el.url)\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                nestedData.push(res);\r\n            })\r\n        })).then(()=>{\r\n            resolve({items: nestedData,count: list.count});\r\n        })\r\n    })\r\n\r\n}","import { decorate, runInAction, computed, observable, action } from 'mobx';\r\nimport {fetchList} from \"./../api.js\";\r\n\r\nclass Store{\r\n    pokemons = [];\r\n    status = 'pending';\r\n    itemsCount = 0;\r\n    elementPerList = 20;\r\n    currentPage = 0;\r\n    itemForModal = {};\r\n    tempArr = [];\r\n    selectedFilters = [];\r\n    allFiltres = [];\r\n\r\n    pushPokemons = (item)=>{\r\n        this.pokemons.push(item);\r\n    }\r\n\r\n    setStatus(status){\r\n        this.status = status;\r\n    }\r\n    getList = async (offset,limit)=>{\r\n        await fetchList(offset,limit)\r\n        .then(data=>{\r\n            console.log('store',data);\r\n            //getting select values\r\n            let arr = [];\r\n            data.items.map(el=>{\r\n                el.types.map(item=>{\r\n                    arr.push(item.type.name);\r\n                })\r\n            });\r\n            let uniqueArr = arr.filter((item,index)=>{return arr.indexOf(item) == index});\r\n\r\n            let selectArr =[]\r\n            uniqueArr.map(el=>{ selectArr.push({value:el,label:el})})\r\n\r\n            runInAction(()=>{\r\n                this.pokemons = data.items\r\n                this.status = \"success\"\r\n                this.itemsCount = data.count;\r\n                this.allFiltres = selectArr;\r\n            })\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            runInAction(()=>{\r\n                this.status = \"error\";\r\n            })\r\n        })\r\n    }\r\n\r\n    setPagination(payload){\r\n        console.log(typeof payload)\r\n       \r\n    }\r\n    setPage(page){\r\n        this.currentPage = page; \r\n    }\r\n    updatePagination(e){\r\n        console.log(e.target.value);\r\n        this.elementPerList = parseInt(e.target.value);\r\n        this.setStatus('pending');\r\n        this.getList(this.offset,this.elementPerList);\r\n    }\r\n    get offset(){\r\n        return (this.currentPage)* this.elementPerList;\r\n    }\r\n    get pageCount(){\r\n        return this.itemsCount / this.elementPerList;\r\n    }\r\n\r\n    changingPage(page){\r\n        this.setPage(page.selected);\r\n        this.getList(this.offset,this.elementPerList);\r\n        this.setStatus('pending');\r\n    }\r\n    callModal(el){\r\n        console.log(el.name);\r\n        this.itemForModal = el;\r\n    }\r\n\r\n    filterByName(e){\r\n\r\n        if(this.tempArr.length){ // allow find second time by another name, because my this.pokemons modified after first search\r\n            this.pokemons = this.tempArr;\r\n        }  \r\n        let arr = this.pokemons.slice();\r\n        let filteredArr = arr.filter(el=> el.name == e.target.value);\r\n\r\n        if(!filteredArr.length && e.target.value.length){\r\n            this.tempArr = this.pokemons;\r\n        }\r\n        if(filteredArr.length){\r\n            this.tempArr = this.pokemons;\r\n            this.pokemons = filteredArr;\r\n        }else if(e.target.value.length == 0){\r\n            console.log('asd')\r\n            console.log(\"temp:\",this.tempArr);\r\n            console.log('main',this.pokemons);\r\n            this.pokemons = this.tempArr;\r\n        }\r\n    }\r\n\r\n    filterByTag(e){\r\n        let filtres = [];\r\n        if(this.tempArr.length){ // if at least one filter choosed, pokemons need to throw to default\r\n            this.pokemons = this.tempArr;\r\n        }\r\n        if(e == null ||  !e.length){\r\n            filtres = this.allFiltres;\r\n            this.pokemons = this.tempArr;\r\n        }else{\r\n            e.map(el=>filtres.push(el.value));\r\n            let newArr = [];\r\n            this.pokemons.map(pokemon=>{\r\n                pokemon.types.map(el=>{\r\n                    if(filtres.indexOf(el.type.name) > -1){    \r\n                        newArr.push(pokemon);\r\n                    }\r\n                })\r\n            })\r\n            this.tempArr = this.pokemons;\r\n            this.pokemons = newArr;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\ndecorate(Store,{\r\n    pokemons: observable,\r\n    status: observable,\r\n    itemsCount: observable,\r\n    elementPerList: observable,\r\n    updatePagination: action,\r\n    offset: computed,\r\n    changingPage: action,\r\n    currentPage: observable, \r\n    setStatus: action,\r\n    pageCount: computed,\r\n    itemForModal: observable,\r\n    tempArr: observable,\r\n    allFiltres: observable,\r\n    selectedFilters: observable\r\n\r\n})\r\nexport default new Store(); ","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import React , {useRef} from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {useEffect}  from 'react';\r\nimport store from './store';\r\nimport styles from './style.module.scss';\r\nimport ReactPaginate from 'react-paginate';\r\nimport userOutsideClick from \"./js/userOutsideClick\";\r\nimport typeColors from './js/typeColors';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\n\r\n\r\n\r\nconst App = observer(() => {\r\n    const {status, currentPage, pageCount ,elementPerList, pokemons, itemForModal ,allFiltres , selectedFilters} = store;\r\n    useEffect(()=>{\r\n        store.getList(currentPage,elementPerList);\r\n    },[]);\r\n    \r\n    const ref = useRef();\r\n\r\n    userOutsideClick(ref, () => {\r\n        if(Object.keys(itemForModal).length){\r\n            store.callModal({}); \r\n        }\r\n    });\r\n    const animatedComponents = makeAnimated();\r\n\r\n    return(\r\n        <div className={styles.box}>\r\n            <div className={styles.nagivation}>\r\n                <Select\r\n                    className={styles.tagFilter}\r\n                    onChange={e=>store.filterByTag(e)} \r\n                    closeMenuOnSelect={false}\r\n                    components={animatedComponents}\r\n                    defaultValue={allFiltres}\r\n                    isMulti\r\n                    options={allFiltres}\r\n                />\r\n                <input \r\n                    className={styles.nameSearch}\r\n                    onChange={e=>store.filterByName(e)}\r\n                    placeholder=\"find by fullname\"\r\n                />\r\n                <div className={styles.pagination}> \r\n                    <h3>items per list:</h3>\r\n                    <select value={elementPerList} onChange={(e)=>store.updatePagination(e)}>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"50\">50</option>\r\n                    </select>\r\n                </div>\r\n                <ReactPaginate \r\n                    previousLabel={'previous'}\r\n                    nextLabel={'next'}\r\n                    pageCount={pageCount}\r\n                    breakLabel={'...'} \r\n                    breakClassName={'break-me'}\r\n                    onPageChange={e=>store.changingPage(e)}\r\n                    marginPagesDisplayed={1}\r\n                    pageRangeDisplayed={1}\r\n                    initialPage = {currentPage}\r\n                    containerClassName={'paginationMenu'}\r\n                    subContainerClassName={'pages pagination'}\r\n                    activeClassName={styles.active}\r\n                />\r\n            </div>\r\n            <h1 className={styles.loader}>{status == \"pending\" ? \"Retrieving data...\" : null}</h1>\r\n            \r\n            <div className={styles.mainArea} style={{filter: status === \"pending\" ?  \"blur(10px)\" : null}}>\r\n\r\n            {pokemons.map(el=>(\r\n                <div className={styles.card} key={el.name+Date.now()} onClick={e=>store.callModal(el)}>\r\n                    <div>{el.name}</div>\r\n                    <img src={el.sprites.front_default} alt={el.name}/>\r\n                    <h3>stats:</h3>\r\n                    <p>{el.stats[0].stat.name}: {el.stats[0].base_stat}</p>\r\n                    <p>{el.stats[1].stat.name}: {el.stats[1].base_stat}</p>\r\n                    <p>{el.stats[5].stat.name}: {el.stats[5].base_stat}</p>\r\n                    <div className={styles.tags}>\r\n                        <h3>types:</h3>\r\n                        {el.types.map(el=>(\r\n                            <div className={styles.tag} style={{backgroundColor: typeColors[el.type.name]}} key={el.type.name}>{el.type.name}</div>\r\n                        ))}\r\n                    </div>\r\n                </div> \r\n            ))}\r\n\r\n            </div>\r\n            \r\n            {Object.keys(itemForModal).length ? \r\n                <div className={styles.modal} ref={ref}>\r\n                    <div className={styles.leftPart}>\r\n                        <img src={itemForModal.sprites.front_default} alt={itemForModal.name}/>\r\n                        <h1>{itemForModal.name}</h1>\r\n                        <p>weigth: {itemForModal.weight}</p>\r\n                    </div>\r\n                    <div className={styles.rightPart}>\r\n                        <h2>stats:</h2>\r\n                        {itemForModal.stats.map(el=>(\r\n                            <p key={el.base_stat+el.stat.name}>{el.stat.name}: {el.base_stat}</p>\r\n                        ))}\r\n                    </div>\r\n                    <p className={styles.close} onClick={e=>store.callModal({})}>Close</p>\r\n                </div> \r\n            : null}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__pFtgH\",\"nagivation\":\"style_nagivation__1ra-M\",\"tagFilter\":\"style_tagFilter__3Gkca\",\"pagination\":\"style_pagination__2BrT8\",\"active\":\"style_active__3NxLy\",\"nameSearch\":\"style_nameSearch__2c1Pp\",\"modal\":\"style_modal__3hQ3z\",\"close\":\"style_close__-Puro\",\"loader\":\"style_loader__2y5Ua\",\"mainArea\":\"style_mainArea__1OZoJ\",\"card\":\"style_card__2PpwJ\",\"tags\":\"style_tags__2M0kw\",\"tag\":\"style_tag__bykId\"};"],"sourceRoot":""}